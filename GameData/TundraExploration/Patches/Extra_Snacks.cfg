// Gigan Command Pod
@PART[TE_19_C-Dragon_Pod|TE_20_CargoRodan]:NEEDS[SnacksUtils]
{
	@description ^= :$: Jebediah made us remember to add room for snacks, but was cautious because landing with a full load of snacks sounds like a bad idea.
	MODULE
	{
		name = SoilRecycler
		ConverterName = Soil Recycler
		StartActionName = Start Soil Recycler
		StopActionName = Stop Soil Recycler
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		RecyclerCapacity = 4
	 
		INPUT_RESOURCE
		{
			ResourceName = Soil
			Ratio = 0.000034723
			FlowMode = ALL_VESSEL
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 18
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}
	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 40
	}
	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = FreshAir
		amount = 100
		maxAmount = 100
	}
	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 100
		isTweakable = false
	}
}
//Dragon XL
@PART[TE_21_DXL_Storage]:NEEDS[SnacksUtils]
{
	@description ^= :$: Jebediah made us remember to add room for snacks, but was cautious because landing with a full load of snacks sounds like a bad idea.
	MODULE
	{
		name = SoilRecycler
		ConverterName = Soil Recycler
		StartActionName = Start Soil Recycler
		StopActionName = Stop Soil Recycler
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		RecyclerCapacity = 4
	 
		INPUT_RESOURCE
		{
			ResourceName = Soil
			Ratio = 0.000034723
			FlowMode = ALL_VESSEL
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 18
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}
	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 100
	}
	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = FreshAir
		amount = 300
		maxAmount = 300
	}
	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 250
		isTweakable = false
	}
}
// Mk3 BFS-2800 Command Pod
// Mk4 BFS-3200 Command Pod
@PART[TE_18_BFS_CommandPod|TE2_19_SS_Crew_Pod]:NEEDS[Snacks]
{
	%RESOURCE[Snacks]
	{
		%amount = 7500
		%maxAmount = 7500
	}
	%RESOURCE[Soil]
	{
		%amount = 0
		%maxAmount = 400
	}

	@description ^= :$: Jebediah made us remember to add room for snacks, but was cautious because landing with a full load of snacks sounds like a bad idea.

	MODULE
	{
		name = SoilRecycler
		ConverterName = Soil Recycler
		StartActionName = Start Soil Recycler
		StopActionName = Stop Soil Recycler
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		RecyclerCapacity = 8
	 
		INPUT_RESOURCE
		{
			ResourceName = Soil
			Ratio = 0.000034723
			FlowMode = ALL_VESSEL
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 18
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}
}

@PART[TE_18_BFS_CommandPod|TE2_19_SS_Crew_Pod]:NEEDS[SnacksFreshAir]
{
	RESOURCE
	{
		name = FreshAir
		amount = 960
		maxAmount = 960
	}
	RESOURCE
	{
		name = StaleAir
		amount = 0
		maxAmount = 960
	}
	MODULE
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scrubber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = 0.00148
			FlowMode = ALL_VESSEL
		}
		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.8
			FlowMode = ALL_VESSEL
		}
		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = 0.000592
			FlowMode = ALL_VESSEL
		}	
	}
}

@PART[TE_18_BFS_CommandPod|TE2_19_SS_Crew_Pod]:NEEDS[SnacksStress]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Entertainment Center
		StartActionName = Start Entertainment
		StopActionName = Stop Entertainment
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = true

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Relaxing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.8
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 1.4
		}
	}
	MODULE
	{
		name = SnacksConverter
		ConverterName = Stargazing
		StartActionName = Start Stargazing
		StopActionName = Stop Stargazing
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Stargazing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.05
			FlowMode = STAGE_PRIORITY_FLOW
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 1.5
		}
	}
}